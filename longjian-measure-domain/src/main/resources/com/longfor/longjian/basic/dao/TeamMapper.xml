<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longfor.longjian.basic.dao.TeamMapper" >
  <resultMap id="BaseResultMap" type="com.longfor.longjian.basic.po.Team" >
    <id column="team_id" property="teamId" jdbcType="INTEGER" />
    <result column="team_name" property="teamName" jdbcType="VARCHAR" />
    <result column="parent_team_id" property="parentTeamId" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="display_index" property="displayIndex" jdbcType="INTEGER" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="owner_user_id" property="ownerUserId" jdbcType="INTEGER" />
    <result column="group_code" property="groupCode" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="delete_at" property="deleteAt" jdbcType="TIMESTAMP" />
    <result column="custom_id" property="customId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.longfor.longjian.basic.po.TeamWithBLOBs" extends="BaseResultMap" >
    <result column="setting" property="setting" jdbcType="LONGVARCHAR" />
    <result column="custom_extra" property="customExtra" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    team_id, team_name, parent_team_id, path, level, display_index, payment_type, owner_user_id, 
    group_code, create_at, update_at, delete_at, custom_id
  </sql>
  <sql id="Blob_Column_List" >
    setting, custom_extra
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from team
    where team_id = #{teamId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from team
    where team_id = #{teamId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.longfor.longjian.basic.po.TeamWithBLOBs" >
    insert into team (team_id, team_name, parent_team_id, 
      path, level, display_index, 
      payment_type, owner_user_id, group_code, 
      create_at, update_at, delete_at, 
      custom_id, setting, custom_extra
      )
    values (#{teamId,jdbcType=INTEGER}, #{teamName,jdbcType=VARCHAR}, #{parentTeamId,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{displayIndex,jdbcType=INTEGER}, 
      #{paymentType,jdbcType=INTEGER}, #{ownerUserId,jdbcType=INTEGER}, #{groupCode,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{deleteAt,jdbcType=TIMESTAMP}, 
      #{customId,jdbcType=VARCHAR}, #{setting,jdbcType=LONGVARCHAR}, #{customExtra,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.longfor.longjian.basic.po.TeamWithBLOBs" >
    insert into team
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teamId != null" >
        team_id,
      </if>
      <if test="teamName != null" >
        team_name,
      </if>
      <if test="parentTeamId != null" >
        parent_team_id,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="displayIndex != null" >
        display_index,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="ownerUserId != null" >
        owner_user_id,
      </if>
      <if test="groupCode != null" >
        group_code,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="deleteAt != null" >
        delete_at,
      </if>
      <if test="customId != null" >
        custom_id,
      </if>
      <if test="setting != null" >
        setting,
      </if>
      <if test="customExtra != null" >
        custom_extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teamId != null" >
        #{teamId,jdbcType=INTEGER},
      </if>
      <if test="teamName != null" >
        #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="parentTeamId != null" >
        #{parentTeamId,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="displayIndex != null" >
        #{displayIndex,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="ownerUserId != null" >
        #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="groupCode != null" >
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="customId != null" >
        #{customId,jdbcType=VARCHAR},
      </if>
      <if test="setting != null" >
        #{setting,jdbcType=LONGVARCHAR},
      </if>
      <if test="customExtra != null" >
        #{customExtra,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.longfor.longjian.basic.po.TeamWithBLOBs" >
    update team
    <set >
      <if test="teamName != null" >
        team_name = #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="parentTeamId != null" >
        parent_team_id = #{parentTeamId,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="displayIndex != null" >
        display_index = #{displayIndex,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="ownerUserId != null" >
        owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      </if>
      <if test="groupCode != null" >
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      </if>
      <if test="customId != null" >
        custom_id = #{customId,jdbcType=VARCHAR},
      </if>
      <if test="setting != null" >
        setting = #{setting,jdbcType=LONGVARCHAR},
      </if>
      <if test="customExtra != null" >
        custom_extra = #{customExtra,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.longfor.longjian.basic.po.TeamWithBLOBs" >
    update team
    set team_name = #{teamName,jdbcType=VARCHAR},
      parent_team_id = #{parentTeamId,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      display_index = #{displayIndex,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      group_code = #{groupCode,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      custom_id = #{customId,jdbcType=VARCHAR},
      setting = #{setting,jdbcType=LONGVARCHAR},
      custom_extra = #{customExtra,jdbcType=LONGVARCHAR}
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longfor.longjian.basic.po.Team" >
    update team
    set team_name = #{teamName,jdbcType=VARCHAR},
      parent_team_id = #{parentTeamId,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      display_index = #{displayIndex,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      owner_user_id = #{ownerUserId,jdbcType=INTEGER},
      group_code = #{groupCode,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      delete_at = #{deleteAt,jdbcType=TIMESTAMP},
      custom_id = #{customId,jdbcType=VARCHAR}
    where team_id = #{teamId,jdbcType=INTEGER}
  </update>
  <select id="selectSubTeamBasics" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from team
    where path = #{childPath,jdbcType=VARCHAR} and delete_at is null
  </select>
</mapper>