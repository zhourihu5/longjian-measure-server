<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longfor.longjian.measure.dao.zhijian2.MeasureZoneMapper">
    <resultMap id="BaseResultMap" type="com.longfor.longjian.measure.po.zhijian2.MeasureZone">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="project_id" property="projectId" jdbcType="INTEGER"/>
        <result column="area_id" property="areaId" jdbcType="INTEGER"/>
        <result column="area_path_and_id" property="areaPathAndId" jdbcType="VARCHAR"/>
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="category_key" property="categoryKey" jdbcType="VARCHAR"/>
        <result column="category_path_and_key" property="categoryPathAndKey" jdbcType="VARCHAR"/>
        <result column="close_status" property="closeStatus" jdbcType="INTEGER"/>
        <result column="finish_status" property="finishStatus" jdbcType="INTEGER"/>
        <result column="list_id" property="listId" jdbcType="INTEGER"/>
        <result column="region_uuid" property="regionUuid" jdbcType="VARCHAR"/>
        <result column="src_type" property="srcType" jdbcType="INTEGER"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
        <result column="delete_at" property="deleteAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id, project_id, area_id, area_path_and_id, uuid, category_key, category_path_and_key,
        close_status, finish_status, list_id, region_uuid, src_type, create_at, update_at,
        delete_at
    </sql>

    <select id="searchTotalByProjectIdAndMeasureListId" resultType="int">
        SELECT
        count(id)
        FROM
        measure_zone
        WHERE
        project_id = #{projectId}
        AND list_id IN
        <foreach collection="measureListIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND delete_at IS NULL
    </select>

    <select id="getMeasureZoneCountByListIdCategoryKey" resultType="int">
    SELECT
    count(id)
    FROM
    measure_zone
    WHERE
    project_id = #{projectId}
    AND list_id = #{listId}
    AND category_path_and_key LIKE concat('%/',#{subKey},'/%')
    and delete_at is null
  </select>
    <!--List<MeasureZone> searchZoneUnscopedByListIdLastIdUpdateAtGt(Integer projectId, String listId, Integer lastId, Integer timestamp, Integer limit, Integer start);-->
    <select id="searchZoneUnscopedByListIdLastIdUpdateAtGt" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from measure_zone
        where
        project_id = #{projectId}
        and list_id=#{listId}
        <if test="timestamp != null and timestamp >= 0">
            AND update_at > FROM_UNIXTIME( #{timestamp} )
        </if>
        ORDER BY
        id ASC
        LIMIT #{start},#{limit}
    </select>
    <!--List<MeasureZone> searchZoneUnscopedByListIdLastIdUpdateAtGt2(Integer projectId, Integer list_id, Integer last_id, Integer timestamp, Integer start, Integer limit);-->
    <select id="searchZoneUnscopedByListIdLastIdUpdateAtGt2" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from measure_zone
        where
        project_id = #{projectId}
        and list_id=#{list_id}
        <if test="timestamp != null and timestamp >= 0">
            AND update_at > FROM_UNIXTIME( #{timestamp} )
        </if>
        LIMIT #{start},#{limit}
    </select>
    <!--Integer getCountZoneUnscopedByListIdUpdateAtGt(@Param("projectId")Integer projectId, @Param("list_id")Integer list_id, @Param("timestamp") Long timestamp);-->
    <select id="getCountZoneUnscopedByListIdUpdateAtGt" resultType="int">
        SELECT
        count(id)
        FROM
        measure_zone
        WHERE
        project_id = #{projectId}
        AND list_id = #{list_id}
        <if test="timestamp != null and timestamp >= 0">
            AND update_at > FROM_UNIXTIME( #{timestamp} )
        </if>
        and delete_at is null

    </select>

    <select id="searchZoneByUuid" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        measure_zone
        WHERE
        project_id = #{projId}
        AND uuid IN
        <foreach collection="zoneUuids" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <!--MeasureZone searchByCondition(@Param("project_id") Integer project_id, @Param("list_id") Integer list_id, @Param("uuid") String uuid, @Param("category_key") String category_key); -->
    <select id="searchByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        measure_zone
        where
        project_id=#{project_id}
        and
        list_id = #{list_id}
        and
        uuid= #{uuid}
        and
        category_key = #{category_key}
    </select>
    <!--MeasureZone getZoneByUuid(@Param("project_id")Integer project_id, @Param("list_id")String uuid);-->
    <select id="getZoneByUuid"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        measure_zone
        where
        project_id=#{project_id}
        and
        uuid= #{uuid}
    </select>
    <!---->
    <select id="GetByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        measure_zone
        WHERE
        project_id=#{projectId}
        and
        id= #{id}
    </select>
    <!---->
    <select id="GetMeasureListCategoryCount" resultType="int">
        SELECT
        COUNT(DISTINCT category_key)
        FROM
        measure_zone
        WHERE
        list_id = #{measureListId}
        AND(
        delete_at IS NULL
        OR
        delete_at = "0001-01-01 00:00:00"
        )
    </select>
    <select id="GetMeasureListBuildingCount" resultType="int">
        SELECT
        COUNT(DISTINCT region_uuid)
        FROM
        measure_zone
        WHERE
        list_id = #{measureListId}
        AND(
        delete_at IS NULL
        OR
        delete_at = "0001-01-01 00:00:00"
        )
    </select>

</mapper>